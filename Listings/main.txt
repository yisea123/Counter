; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\user -I.\driver -I.\HARDWARE\TIMER -I.\AD_Sample -I.\SYSTEM\delay -I.\Cmd -I.\SYSTEM\sys -I.\UCOSII\CONFIG -I.\UCOSII\CORE -I.\UCOSII\PORT -I.\Protocol -I.\RTE\Device\STM32F103ZE -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD --omf_browse=.\objects\main.crf user\main.c]
                          THUMB

                          AREA ||i.cmd_task||, CODE, READONLY, ALIGN=2

                  cmd_task PROC
;;;186    //cmd 任务 
;;;187    void cmd_task(void *pdata) 
000000  b508              PUSH     {r3,lr}
;;;188    { 
;;;189    	u8 err;	
;;;190    	while (1)
000002  e00c              B        |L1.30|
                  |L1.4|
;;;191    	{
;;;192    		if ((u32)OSQPend(cmd_msg,0,&err) == 0x55)
000004  466a              MOV      r2,sp
000006  2100              MOVS     r1,#0
000008  4805              LDR      r0,|L1.32|
00000a  6800              LDR      r0,[r0,#0]  ; cmd_msg
00000c  f7fffffe          BL       OSQPend
000010  2855              CMP      r0,#0x55
000012  d101              BNE      |L1.24|
;;;193    		{
;;;194    			vTaskCmdAnalyze ();
000014  f7fffffe          BL       vTaskCmdAnalyze
                  |L1.24|
;;;195    		}
;;;196    		delay_ms(10); 
000018  200a              MOVS     r0,#0xa
00001a  f7fffffe          BL       delay_ms
                  |L1.30|
00001e  e7f1              B        |L1.4|
;;;197    	}
;;;198    } 
;;;199    
                          ENDP

                  |L1.32|
                          DCD      cmd_msg

                          AREA ||i.debug_task||, CODE, READONLY, ALIGN=2

                  debug_task PROC
;;;228    //浮点测试任务 
;;;229    void debug_task(void *pdata) 
000000  b508              PUSH     {r3,lr}
;;;230    { 
;;;231    	u8 err;	
;;;232    	while (1)
000002  e029              B        |L2.88|
                  |L2.4|
;;;233    	{
;;;234    		if ((u32)OSQPend(debug_msg, 0, &err) == 0x55)
000004  466a              MOV      r2,sp
000006  2100              MOVS     r1,#0
000008  4814              LDR      r0,|L2.92|
00000a  6800              LDR      r0,[r0,#0]  ; debug_msg
00000c  f7fffffe          BL       OSQPend
000010  2855              CMP      r0,#0x55
000012  d113              BNE      |L2.60|
;;;235    		{
;;;236    			my_println ("start");
000014  a012              ADR      r0,|L2.96|
000016  f7fffffe          BL       __2printf
;;;237    			start_uart1_dma (g_counter.buf_addr, g_counter.ch[my_env.watch_ch].sample_size * 2);
00001a  4a13              LDR      r2,|L2.104|
00001c  8892              LDRH     r2,[r2,#4]  ; my_env
00001e  eb021202          ADD      r2,r2,r2,LSL #4
000022  4b12              LDR      r3,|L2.108|
000024  eb030242          ADD      r2,r3,r2,LSL #1
000028  8bd2              LDRH     r2,[r2,#0x1e]
00002a  f64f73ff          MOV      r3,#0xffff
00002e  ea030142          AND      r1,r3,r2,LSL #1
000032  4a0e              LDR      r2,|L2.108|
000034  f8d201a4          LDR      r0,[r2,#0x1a4]  ; g_counter
000038  f7fffffe          BL       start_uart1_dma
                  |L2.60|
;;;238    			//start_uart1_dma ((u32)test_dma, sizeof (test_dma));
;;;239    		}
;;;240    		
;;;241    		if ((u32)OSQPend(debug_msg, 0, &err) == 0xaa)
00003c  466a              MOV      r2,sp
00003e  2100              MOVS     r1,#0
000040  4806              LDR      r0,|L2.92|
000042  6800              LDR      r0,[r0,#0]  ; debug_msg
000044  f7fffffe          BL       OSQPend
000048  28aa              CMP      r0,#0xaa
00004a  d105              BNE      |L2.88|
;;;242    		{
;;;243    			my_println ("\nend");
00004c  a008              ADR      r0,|L2.112|
00004e  f7fffffe          BL       __2printf
;;;244    			my_env.dma_state = 0;
000052  2000              MOVS     r0,#0
000054  4904              LDR      r1,|L2.104|
000056  80c8              STRH     r0,[r1,#6]
                  |L2.88|
000058  e7d4              B        |L2.4|
;;;245    		}
;;;246    	}
;;;247    } 
;;;248    
                          ENDP

00005a  0000              DCW      0x0000
                  |L2.92|
                          DCD      debug_msg
                  |L2.96|
000060  73746172          DCB      "start\n",0
000064  740a00  
000067  00                DCB      0
                  |L2.104|
                          DCD      my_env
                  |L2.108|
                          DCD      g_counter
                  |L2.112|
000070  0a656e64          DCB      "\nend\n",0
000074  0a00    
000076  00                DCB      0
000077  00                DCB      0

                          AREA ||i.led1_task||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                  led1_task PROC
;;;201    //LED1 任务 
;;;202    void led1_task(void *pdata) 
000000  e055              B        |L3.174|
                  |L3.2|
;;;203    { 
;;;204    	while(1) 
;;;205    	{ 
;;;206    		GPIO_ReadOutputDataBit (GPIOB, LED2_MAP) ? GPIO_WriteBit(GPIOB, LED2_MAP, Bit_RESET) : GPIO_WriteBit(GPIOB, LED2_MAP, Bit_SET);	
000002  f44f7180          MOV      r1,#0x100
000006  482a              LDR      r0,|L3.176|
000008  f7fffffe          BL       GPIO_ReadOutputDataBit
00000c  b130              CBZ      r0,|L3.28|
00000e  2200              MOVS     r2,#0
000010  f44f7180          MOV      r1,#0x100
000014  4826              LDR      r0,|L3.176|
000016  f7fffffe          BL       GPIO_WriteBit
00001a  e004              B        |L3.38|
                  |L3.28|
00001c  2201              MOVS     r2,#1
00001e  0211              LSLS     r1,r2,#8
000020  4823              LDR      r0,|L3.176|
000022  f7fffffe          BL       GPIO_WriteBit
                  |L3.38|
;;;207    		delay_ms(300); 
000026  f44f7096          MOV      r0,#0x12c
00002a  f7fffffe          BL       delay_ms
;;;208    		GPIO_ReadOutputDataBit (GPIOB, LED2_MAP) ? GPIO_WriteBit(GPIOB, LED2_MAP, Bit_RESET) : GPIO_WriteBit(GPIOB, LED2_MAP, Bit_SET);	
00002e  f44f7180          MOV      r1,#0x100
000032  481f              LDR      r0,|L3.176|
000034  f7fffffe          BL       GPIO_ReadOutputDataBit
000038  b130              CBZ      r0,|L3.72|
00003a  2200              MOVS     r2,#0
00003c  f44f7180          MOV      r1,#0x100
000040  481b              LDR      r0,|L3.176|
000042  f7fffffe          BL       GPIO_WriteBit
000046  e004              B        |L3.82|
                  |L3.72|
000048  2201              MOVS     r2,#1
00004a  0211              LSLS     r1,r2,#8
00004c  4818              LDR      r0,|L3.176|
00004e  f7fffffe          BL       GPIO_WriteBit
                  |L3.82|
;;;209    		delay_ms(300); 
000052  f44f7096          MOV      r0,#0x12c
000056  f7fffffe          BL       delay_ms
;;;210    		if (counter_process_cycle > dma_irq_cycle - 15)
00005a  4816              LDR      r0,|L3.180|
00005c  8800              LDRH     r0,[r0,#0]  ; dma_irq_cycle
00005e  380f              SUBS     r0,r0,#0xf
000060  4915              LDR      r1,|L3.184|
000062  8809              LDRH     r1,[r1,#0]  ; counter_process_cycle
000064  4288              CMP      r0,r1
000066  da14              BGE      |L3.146|
;;;211    		{
;;;212    			my_println ("\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
000068  a014              ADR      r0,|L3.188|
00006a  f7fffffe          BL       __2printf
;;;213    			my_println ("Error!!! counter_process take too long time");
00006e  a01f              ADR      r0,|L3.236|
000070  f7fffffe          BL       __2printf
;;;214    			my_println ("counter_process_cycle = %d us", counter_process_cycle);
000074  4810              LDR      r0,|L3.184|
000076  8801              LDRH     r1,[r0,#0]  ; counter_process_cycle
000078  a028              ADR      r0,|L3.284|
00007a  f7fffffe          BL       __2printf
;;;215    			my_println ("dma_irq_cycle - 15 = %d us", dma_irq_cycle - 15);
00007e  480d              LDR      r0,|L3.180|
000080  8800              LDRH     r0,[r0,#0]  ; dma_irq_cycle
000082  f1a0010f          SUB      r1,r0,#0xf
000086  a02d              ADR      r0,|L3.316|
000088  f7fffffe          BL       __2printf
;;;216    			my_println ("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
00008c  a032              ADR      r0,|L3.344|
00008e  f7fffffe          BL       __2printf
                  |L3.146|
;;;217    			//while (1);
;;;218    		}
;;;219    		if (counter_process_state != 0 && my_env.tty == TTY_IDLE)
000092  483d              LDR      r0,|L3.392|
000094  6800              LDR      r0,[r0,#0]  ; counter_process_state
000096  b150              CBZ      r0,|L3.174|
000098  483c              LDR      r0,|L3.396|
00009a  8940              LDRH     r0,[r0,#0xa]  ; my_env
00009c  b938              CBNZ     r0,|L3.174|
;;;220    		{
;;;221    			my_println ("Error!!! counter_process runtime error!!! state:%02d", counter_process_state);
00009e  483a              LDR      r0,|L3.392|
0000a0  6801              LDR      r1,[r0,#0]  ; counter_process_state
0000a2  a03b              ADR      r0,|L3.400|
0000a4  f7fffffe          BL       __2printf
;;;222    			cmd ();
0000a8  a047              ADR      r0,|L3.456|
0000aa  f7fffffe          BL       __2printf
                  |L3.174|
0000ae  e7a8              B        |L3.2|
;;;223    		}
;;;224    	}; 
;;;225    } 
;;;226    
                          ENDP

                  |L3.176|
                          DCD      0x40010c00
                  |L3.180|
                          DCD      dma_irq_cycle
                  |L3.184|
                          DCD      counter_process_cycle
                  |L3.188|
0000bc  0a212121          DCB      "\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n",0
0000c0  21212121
0000c4  21212121
0000c8  21212121
0000cc  21212121
0000d0  21212121
0000d4  21212121
0000d8  21212121
0000dc  21212121
0000e0  21212121
0000e4  21212121
0000e8  0a00    
0000ea  00                DCB      0
0000eb  00                DCB      0
                  |L3.236|
0000ec  4572726f          DCB      "Error!!! counter_process take too long time\n",0
0000f0  72212121
0000f4  20636f75
0000f8  6e746572
0000fc  5f70726f
000100  63657373
000104  2074616b
000108  6520746f
00010c  6f206c6f
000110  6e672074
000114  696d650a
000118  00      
000119  00                DCB      0
00011a  00                DCB      0
00011b  00                DCB      0
                  |L3.284|
00011c  636f756e          DCB      "counter_process_cycle = %d us\n",0
000120  7465725f
000124  70726f63
000128  6573735f
00012c  6379636c
000130  65203d20
000134  25642075
000138  730a00  
00013b  00                DCB      0
                  |L3.316|
00013c  646d615f          DCB      "dma_irq_cycle - 15 = %d us\n",0
000140  6972715f
000144  6379636c
000148  65202d20
00014c  3135203d
000150  20256420
000154  75730a00
                  |L3.344|
000158  21212121          DCB      "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n",0
00015c  21212121
000160  21212121
000164  21212121
000168  21212121
00016c  21212121
000170  21212121
000174  21212121
000178  21212121
00017c  21212121
000180  2121210a
000184  00      
000185  00                DCB      0
000186  00                DCB      0
000187  00                DCB      0
                  |L3.392|
                          DCD      counter_process_state
                  |L3.396|
                          DCD      my_env
                  |L3.400|
000190  4572726f          DCB      "Error!!! counter_process runtime error!!! state:%02d\n",0
000194  72212121
000198  20636f75
00019c  6e746572
0001a0  5f70726f
0001a4  63657373
0001a8  2072756e
0001ac  74696d65
0001b0  20657272
0001b4  6f722121
0001b8  21207374
0001bc  6174653a
0001c0  25303264
0001c4  0a00    
0001c6  00                DCB      0
0001c7  00                DCB      0
                  |L3.456|
0001c8  4e69636b          DCB      "Nick-Cmd:",0
0001cc  2d436d64
0001d0  3a00    
0001d2  00                DCB      0
0001d3  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;70     
;;;71     int main (void)
000000  b508              PUSH     {r3,lr}
;;;72     {
;;;73     //	int a,b,c;
;;;74     	INT8U err;
;;;75     	//a = tesafds;
;;;76     	 
;;;77     	
;;;78     	delay_init();	    	 //延时函数初始化	
000002  f7fffffe          BL       delay_init
;;;79     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//设置中断优先级分组为组2：2位抢占优先级，2位响应优先级
000006  f44f60a0          MOV      r0,#0x500
00000a  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;80     	SystemInit ();
00000e  f7fffffe          BL       SystemInit
;;;81     	
;;;82     	uart1_init ();
000012  f7fffffe          BL       uart1_init
;;;83     	
;;;84     	my_println ();
000016  a026              ADR      r0,|L4.176|
000018  f7fffffe          BL       __2printf
;;;85     	my_println ("*****************************************************************");
00001c  4825              LDR      r0,|L4.180|
00001e  f7fffffe          BL       __2printf
;;;86     	my_println ("*                   Micrium uC/OS-II Start                      *");
000022  4825              LDR      r0,|L4.184|
000024  f7fffffe          BL       __2printf
;;;87     	my_println ("*****************************************************************");
000028  4822              LDR      r0,|L4.180|
00002a  f7fffffe          BL       __2printf
;;;88     	my_println ("my_cmd_Start at 0x%08x", (unsigned int)MY_CMD_RO_SEC_START);
00002e  4923              LDR      r1,|L4.188|
000030  a023              ADR      r0,|L4.192|
000032  f7fffffe          BL       __2printf
;;;89     	my_println ("my_cmd_End at 0x%08x", (unsigned int)MY_CMD_RO_SEC_END);
000036  4821              LDR      r0,|L4.188|
000038  4a27              LDR      r2,|L4.216|
00003a  1881              ADDS     r1,r0,r2
00003c  a027              ADR      r0,|L4.220|
00003e  f7fffffe          BL       __2printf
;;;90     	my_println ("my_cmd_Length 0x%02x", (unsigned int)MY_CMD_RO_SEC_LENGTH);
000042  4925              LDR      r1,|L4.216|
000044  a02b              ADR      r0,|L4.244|
000046  f7fffffe          BL       __2printf
;;;91     	//my_println ("__my_cmd_usbboot at 0x%08x", (int)&__my_cmd_usbboot);
;;;92     	
;;;93     	my_println ("TIM2 int cycle is %10d us", TIM2_INT_CYCLE);
00004a  f44f71fa          MOV      r1,#0x1f4
00004e  a02f              ADR      r0,|L4.268|
000050  f7fffffe          BL       __2printf
;;;94     	my_println ("TIM3 int cycle is %10d us", TIM3_INT_CYCLE);
000054  f44f717a          MOV      r1,#0x3e8
000058  a033              ADR      r0,|L4.296|
00005a  f7fffffe          BL       __2printf
;;;95     	my_println ("TIM4 int cycle is %10d us", TIM4_INT_CYCLE);
00005e  f44f717a          MOV      r1,#0x3e8
000062  a038              ADR      r0,|L4.324|
000064  f7fffffe          BL       __2printf
;;;96     	my_println ("TIM5 int cycle is %10d us", TIM5_INT_CYCLE);
000068  f44f3180          MOV      r1,#0x10000
00006c  a03c              ADR      r0,|L4.352|
00006e  f7fffffe          BL       __2printf
;;;97     	my_println ("TIM6 int cycle is %10d us", TIM6_INT_CYCLE);
000072  f6472113          MOV      r1,#0x7a13
000076  a041              ADR      r0,|L4.380|
000078  f7fffffe          BL       __2printf
;;;98     	my_println ("TIM7 int cycle is %10d us", TIM7_INT_CYCLE);
00007c  f44f617a          MOV      r1,#0xfa0
000080  a045              ADR      r0,|L4.408|
000082  f7fffffe          BL       __2printf
;;;99     	
;;;100    	cmd ();
000086  a04b              ADR      r0,|L4.436|
000088  f7fffffe          BL       __2printf
;;;101    	
;;;102    	OSInit(); //UCOS 初始化 
00008c  f7fffffe          BL       OSInit
;;;103    	OSTaskCreate(start_task, (void*)0,(OS_STK*)&START_TASK_STK[START_STK_SIZE-1], START_TASK_PRIO); //创建开始任务 
000090  230a              MOVS     r3,#0xa
000092  4a4b              LDR      r2,|L4.448|
000094  2100              MOVS     r1,#0
000096  484b              LDR      r0,|L4.452|
000098  f7fffffe          BL       OSTaskCreate
;;;104        OSTaskNameSet(START_TASK_PRIO, (INT8U *)(void *)"start_task", &err);
00009c  466a              MOV      r2,sp
00009e  a14a              ADR      r1,|L4.456|
0000a0  200a              MOVS     r0,#0xa
0000a2  f7fffffe          BL       OSTaskNameSet
;;;105    	OSStart(); //开始任务 
0000a6  f7fffffe          BL       OSStart
;;;106    	
;;;107    }
0000aa  2000              MOVS     r0,#0
0000ac  bd08              POP      {r3,pc}
;;;108    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L4.176|
0000b0  0a00              DCB      "\n",0
0000b2  00                DCB      0
0000b3  00                DCB      0
                  |L4.180|
                          DCD      ||.conststring||
                  |L4.184|
                          DCD      ||.conststring||+0x44
                  |L4.188|
                          DCD      ||Image$$MY_CMD_RO_SEC$$Base||
                  |L4.192|
0000c0  6d795f63          DCB      "my_cmd_Start at 0x%08x\n",0
0000c4  6d645f53
0000c8  74617274
0000cc  20617420
0000d0  30782530
0000d4  38780a00
                  |L4.216|
                          DCD      ||Image$$MY_CMD_RO_SEC$$Length||
                  |L4.220|
0000dc  6d795f63          DCB      "my_cmd_End at 0x%08x\n",0
0000e0  6d645f45
0000e4  6e642061
0000e8  74203078
0000ec  25303878
0000f0  0a00    
0000f2  00                DCB      0
0000f3  00                DCB      0
                  |L4.244|
0000f4  6d795f63          DCB      "my_cmd_Length 0x%02x\n",0
0000f8  6d645f4c
0000fc  656e6774
000100  68203078
000104  25303278
000108  0a00    
00010a  00                DCB      0
00010b  00                DCB      0
                  |L4.268|
00010c  54494d32          DCB      "TIM2 int cycle is %10d us\n",0
000110  20696e74
000114  20637963
000118  6c652069
00011c  73202531
000120  30642075
000124  730a00  
000127  00                DCB      0
                  |L4.296|
000128  54494d33          DCB      "TIM3 int cycle is %10d us\n",0
00012c  20696e74
000130  20637963
000134  6c652069
000138  73202531
00013c  30642075
000140  730a00  
000143  00                DCB      0
                  |L4.324|
000144  54494d34          DCB      "TIM4 int cycle is %10d us\n",0
000148  20696e74
00014c  20637963
000150  6c652069
000154  73202531
000158  30642075
00015c  730a00  
00015f  00                DCB      0
                  |L4.352|
000160  54494d35          DCB      "TIM5 int cycle is %10d us\n",0
000164  20696e74
000168  20637963
00016c  6c652069
000170  73202531
000174  30642075
000178  730a00  
00017b  00                DCB      0
                  |L4.380|
00017c  54494d36          DCB      "TIM6 int cycle is %10d us\n",0
000180  20696e74
000184  20637963
000188  6c652069
00018c  73202531
000190  30642075
000194  730a00  
000197  00                DCB      0
                  |L4.408|
000198  54494d37          DCB      "TIM7 int cycle is %10d us\n",0
00019c  20696e74
0001a0  20637963
0001a4  6c652069
0001a8  73202531
0001ac  30642075
0001b0  730a00  
0001b3  00                DCB      0
                  |L4.436|
0001b4  4e69636b          DCB      "Nick-Cmd:",0
0001b8  2d436d64
0001bc  3a00    
0001be  00                DCB      0
0001bf  00                DCB      0
                  |L4.448|
                          DCD      START_TASK_STK+0x3fc
                  |L4.452|
                          DCD      start_task
                  |L4.456|
0001c8  73746172          DCB      "start_task",0
0001cc  745f7461
0001d0  736b00  
0001d3  00                DCB      0

                          AREA ||i.modbusRTU_msg_task||, CODE, READONLY, ALIGN=2

                  modbusRTU_msg_task PROC
;;;167    
;;;168    void modbusRTU_msg_task(void *pdata)
000000  b508              PUSH     {r3,lr}
;;;169    {
;;;170    	u8 err;	
;;;171    	//u16 i;
;;;172    	pdata=pdata; 
000002  bf00              NOP      
;;;173    	while (1){
000004  e01c              B        |L5.64|
                  |L5.6|
;;;174    		if ((u32)OSQPend(modbusRTU_msg, 0, &err) == 0x55){
000006  466a              MOV      r2,sp
000008  2100              MOVS     r1,#0
00000a  480e              LDR      r0,|L5.68|
00000c  6800              LDR      r0,[r0,#0]  ; modbusRTU_msg
00000e  f7fffffe          BL       OSQPend
000012  2855              CMP      r0,#0x55
000014  d114              BNE      |L5.64|
;;;175    			if (rec_count > 1){
000016  480c              LDR      r0,|L5.72|
000018  6800              LDR      r0,[r0,#0]  ; rec_count
00001a  2801              CMP      r0,#1
00001c  d910              BLS      |L5.64|
;;;176    				if (cmd_analyze.rec_buf[0] == my_env.modbus_rtu_addr){
00001e  480b              LDR      r0,|L5.76|
000020  7800              LDRB     r0,[r0,#0]  ; cmd_analyze
000022  490b              LDR      r1,|L5.80|
000024  89c9              LDRH     r1,[r1,#0xe]  ; my_env
000026  4288              CMP      r0,r1
000028  d10a              BNE      |L5.64|
;;;177    					modbus_analyze (cmd_analyze.rec_buf);
00002a  4808              LDR      r0,|L5.76|
00002c  f7fffffe          BL       modbus_analyze
;;;178    					memset (cmd_analyze.rec_buf, 0, rec_count);
000030  4805              LDR      r0,|L5.72|
000032  6801              LDR      r1,[r0,#0]  ; rec_count
000034  4805              LDR      r0,|L5.76|
000036  f7fffffe          BL       __aeabi_memclr4
;;;179    					rec_count = 0;
00003a  2000              MOVS     r0,#0
00003c  4902              LDR      r1,|L5.72|
00003e  6008              STR      r0,[r1,#0]  ; rec_count
                  |L5.64|
000040  e7e1              B        |L5.6|
;;;180    				}
;;;181    			}
;;;182    		}
;;;183    	}
;;;184    } 
;;;185    
                          ENDP

000042  0000              DCW      0x0000
                  |L5.68|
                          DCD      modbusRTU_msg
                  |L5.72|
                          DCD      rec_count
                  |L5.76|
                          DCD      cmd_analyze
                  |L5.80|
                          DCD      my_env

                          AREA ||i.start_task||, CODE, READONLY, ALIGN=2

                  start_task PROC
;;;110    //开始任务 
;;;111    void start_task(void *pdata) 
000000  b538              PUSH     {r3-r5,lr}
;;;112    { 
000002  4604              MOV      r4,r0
;;;113    	OS_CPU_SR cpu_sr=0; 
000004  2500              MOVS     r5,#0
;;;114    	pdata=pdata; 
000006  bf00              NOP      
;;;115    	INT8U err;
;;;116    	
;;;117    	OSStatInit(); //开启统计任务 
000008  f7fffffe          BL       OSStatInit
;;;118     
;;;119    	OS_ENTER_CRITICAL(); //进入临界区(关闭中断) 
00000c  f7fffffe          BL       OS_CPU_SR_Save
000010  4605              MOV      r5,r0
;;;120    	//创建cmd消息队列
;;;121    	cmd_msg=OSQCreate(&cmdMsgGrp[0], CMD_MSG_SIZE);	//创建消息队列
000012  2101              MOVS     r1,#1
000014  483d              LDR      r0,|L6.268|
000016  f7fffffe          BL       OSQCreate
00001a  493d              LDR      r1,|L6.272|
00001c  6008              STR      r0,[r1,#0]  ; cmd_msg
;;;122    	//创建debug消息队列
;;;123    	debug_msg=OSQCreate(&debugMsgGrp[0], CMD_MSG_SIZE);	//创建消息队列
00001e  2101              MOVS     r1,#1
000020  483c              LDR      r0,|L6.276|
000022  f7fffffe          BL       OSQCreate
000026  493c              LDR      r1,|L6.280|
000028  6008              STR      r0,[r1,#0]  ; debug_msg
;;;124    	//创建modbusRTU消息队列
;;;125    	modbusRTU_msg=OSQCreate(&modbusRTUMsgGrp[0], MODBUSRTU_MSG_SIZE);	//创建消息队列
00002a  2101              MOVS     r1,#1
00002c  483b              LDR      r0,|L6.284|
00002e  f7fffffe          BL       OSQCreate
000032  493b              LDR      r1,|L6.288|
000034  6008              STR      r0,[r1,#0]  ; modbusRTU_msg
;;;126    	
;;;127    	//创建CMD 任务 
;;;128    	OSTaskCreate(cmd_task,(void*)0,(OS_STK*)&CMD_TASK_STK[CMD_STK_SIZE-1],CMD_TASK_PRIO); 
000036  2307              MOVS     r3,#7
000038  4a3a              LDR      r2,|L6.292|
00003a  2100              MOVS     r1,#0
00003c  483a              LDR      r0,|L6.296|
00003e  f7fffffe          BL       OSTaskCreate
;;;129        OSTaskNameSet(CMD_TASK_PRIO, (INT8U *)(void *)"cmd_task", &err);
000042  466a              MOV      r2,sp
000044  a139              ADR      r1,|L6.300|
000046  2007              MOVS     r0,#7
000048  f7fffffe          BL       OSTaskNameSet
;;;130    	//创建LED1 任务 
;;;131    	OSTaskCreate(led1_task,(void*)0,(OS_STK*)&LED1_TASK_STK[LED1_STK_SIZE-1],LED1_TASK_PRIO); 
00004c  2306              MOVS     r3,#6
00004e  4a3a              LDR      r2,|L6.312|
000050  2100              MOVS     r1,#0
000052  483a              LDR      r0,|L6.316|
000054  f7fffffe          BL       OSTaskCreate
;;;132        OSTaskNameSet(LED1_TASK_PRIO, (INT8U *)(void *)"led1_task", &err);
000058  466a              MOV      r2,sp
00005a  a139              ADR      r1,|L6.320|
00005c  2006              MOVS     r0,#6
00005e  f7fffffe          BL       OSTaskNameSet
;;;133    	//创建浮点测试任务 
;;;134    	OSTaskCreate(debug_task,(void*)0,(OS_STK*)&DEBUG_TASK_STK[DEBUG_STK_SIZE-1],DEBUG_TASK_PRIO);
000062  2305              MOVS     r3,#5
000064  4a39              LDR      r2,|L6.332|
000066  2100              MOVS     r1,#0
000068  4839              LDR      r0,|L6.336|
00006a  f7fffffe          BL       OSTaskCreate
;;;135        OSTaskNameSet(DEBUG_TASK_PRIO, (INT8U *)(void *)"debug_task", &err);
00006e  466a              MOV      r2,sp
000070  a138              ADR      r1,|L6.340|
000072  2005              MOVS     r0,#5
000074  f7fffffe          BL       OSTaskNameSet
;;;136    	//创建ModbusRTU任务 
;;;137    	OSTaskCreate(modbusRTU_msg_task,(void*)0,(OS_STK*)&MODBUSRTU_TASK_STK[MODBUSRTU_STK_SIZE-1],MODBUSRTU_TASK_PRIO);
000078  2304              MOVS     r3,#4
00007a  4a39              LDR      r2,|L6.352|
00007c  2100              MOVS     r1,#0
00007e  4839              LDR      r0,|L6.356|
000080  f7fffffe          BL       OSTaskCreate
;;;138        OSTaskNameSet(MODBUSRTU_TASK_PRIO, (INT8U *)(void *)"modbusRTU_task", &err);
000084  466a              MOV      r2,sp
000086  a138              ADR      r1,|L6.360|
000088  2004              MOVS     r0,#4
00008a  f7fffffe          BL       OSTaskNameSet
;;;139    	
;;;140    	TIM2_Int_Init (TIM2_ARR, TIM2_PSC);
00008e  2147              MOVS     r1,#0x47
000090  f24010f3          MOV      r0,#0x1f3
000094  f7fffffe          BL       TIM2_Int_Init
;;;141    	TIM3_PWM_Init (TIM3_ARR, TIM3_PSC); //1ms
000098  2147              MOVS     r1,#0x47
00009a  f24030e7          MOV      r0,#0x3e7
00009e  f7fffffe          BL       TIM3_PWM_Init
;;;142    	TIM4_PWM_Init (TIM4_ARR, TIM4_PSC); //1ms
0000a2  2147              MOVS     r1,#0x47
0000a4  f24030e7          MOV      r0,#0x3e7
0000a8  f7fffffe          BL       TIM4_PWM_Init
;;;143    	TIM5_PWM_Init (TIM5_ARR, TIM5_PSC); //65.536ms
0000ac  2147              MOVS     r1,#0x47
0000ae  f64f70ff          MOV      r0,#0xffff
0000b2  f7fffffe          BL       TIM5_PWM_Init
;;;144    	TIM6_PWM_Init (TIM6_ARR, TIM6_PSC); //10us
0000b6  2147              MOVS     r1,#0x47
0000b8  f6472012          MOV      r0,#0x7a12
0000bc  f7fffffe          BL       TIM6_PWM_Init
;;;145    	TIM7_PWM_Init (TIM7_ARR, TIM7_PSC); //4ms
0000c0  2147              MOVS     r1,#0x47
0000c2  f640709f          MOV      r0,#0xf9f
0000c6  f7fffffe          BL       TIM7_PWM_Init
;;;146    	
;;;147    	led_init ();
0000ca  f7fffffe          BL       led_init
;;;148    	drive_io_init ();
0000ce  f7fffffe          BL       drive_io_init
;;;149    	dac_init ();
0000d2  f7fffffe          BL       dac_init
;;;150    	dac1_set_vol (2500); //2.5V
0000d6  f64010c4          MOV      r0,#0x9c4
0000da  f7fffffe          BL       dac1_set_vol
;;;151    	system_env_init ();
0000de  f7fffffe          BL       system_env_init
;;;152    	modbus_init ();
0000e2  f7fffffe          BL       modbus_init
;;;153    	counter_init ();
0000e6  f7fffffe          BL       counter_init
;;;154    	AD_Sample_init ();
0000ea  f7fffffe          BL       AD_Sample_init
;;;155    	
;;;156    	
;;;157    	//OSTaskSuspend(START_TASK_PRIO);//挂起开始任务 
;;;158    	OS_EXIT_CRITICAL(); //退出临界区(开中断) 
0000ee  4628              MOV      r0,r5
0000f0  f7fffffe          BL       OS_CPU_SR_Restore
;;;159    		
;;;160    	if ( OSTaskDel(OS_PRIO_SELF) != OS_ERR_NONE)			
0000f4  20ff              MOVS     r0,#0xff
0000f6  f7fffffe          BL       OSTaskDel
0000fa  b128              CBZ      r0,|L6.264|
;;;161    	{
;;;162    		my_println ("delete handle_task failed");
0000fc  a01e              ADR      r0,|L6.376|
0000fe  f7fffffe          BL       __2printf
;;;163    		OSTaskSuspend(START_TASK_PRIO);//挂起开始任务 
000102  200a              MOVS     r0,#0xa
000104  f7fffffe          BL       OSTaskSuspend
                  |L6.264|
;;;164    	}	
;;;165    } 
000108  bd38              POP      {r3-r5,pc}
;;;166    
                          ENDP

00010a  0000              DCW      0x0000
                  |L6.268|
                          DCD      cmdMsgGrp
                  |L6.272|
                          DCD      cmd_msg
                  |L6.276|
                          DCD      debugMsgGrp
                  |L6.280|
                          DCD      debug_msg
                  |L6.284|
                          DCD      modbusRTUMsgGrp
                  |L6.288|
                          DCD      modbusRTU_msg
                  |L6.292|
                          DCD      CMD_TASK_STK+0xfc
                  |L6.296|
                          DCD      cmd_task
                  |L6.300|
00012c  636d645f          DCB      "cmd_task",0
000130  7461736b
000134  00      
000135  00                DCB      0
000136  00                DCB      0
000137  00                DCB      0
                  |L6.312|
                          DCD      LED1_TASK_STK+0x1fc
                  |L6.316|
                          DCD      led1_task
                  |L6.320|
000140  6c656431          DCB      "led1_task",0
000144  5f746173
000148  6b00    
00014a  00                DCB      0
00014b  00                DCB      0
                  |L6.332|
                          DCD      DEBUG_TASK_STK+0x1fc
                  |L6.336|
                          DCD      debug_task
                  |L6.340|
000154  64656275          DCB      "debug_task",0
000158  675f7461
00015c  736b00  
00015f  00                DCB      0
                  |L6.352|
                          DCD      MODBUSRTU_TASK_STK+0x1fc
                  |L6.356|
                          DCD      modbusRTU_msg_task
                  |L6.360|
000168  6d6f6462          DCB      "modbusRTU_task",0
00016c  75735254
000170  555f7461
000174  736b00  
000177  00                DCB      0
                  |L6.376|
000178  64656c65          DCB      "delete handle_task failed\n",0
00017c  74652068
000180  616e646c
000184  655f7461
000188  736b2066
00018c  61696c65
000190  640a00  
000193  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  START_TASK_STK
                          %        1024
                  CMD_TASK_STK
                          %        256
                  LED1_TASK_STK
                          %        512
                  DEBUG_TASK_STK
                          %        512
                  MODBUSRTU_TASK_STK
                          %        512

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  2a2a2a2a          DCB      "*******************************************************"
000004  2a2a2a2a
000008  2a2a2a2a
00000c  2a2a2a2a
000010  2a2a2a2a
000014  2a2a2a2a
000018  2a2a2a2a
00001c  2a2a2a2a
000020  2a2a2a2a
000024  2a2a2a2a
000028  2a2a2a2a
00002c  2a2a2a2a
000030  2a2a2a2a
000034  2a2a2a  
000037  2a2a2a2a          DCB      "**********\n",0
00003b  2a2a2a2a
00003f  2a2a0a00
000043  00                DCB      0
000044  2a202020          DCB      "*                   Micrium uC/OS-II Start             "
000048  20202020
00004c  20202020
000050  20202020
000054  20202020
000058  4d696372
00005c  69756d20
000060  75432f4f
000064  532d4949
000068  20537461
00006c  72742020
000070  20202020
000074  20202020
000078  202020  
00007b  20202020          DCB      "         *\n",0
00007f  20202020
000083  202a0a00

                          AREA ||.data||, DATA, ALIGN=2

                  cmd_msg
                          DCD      0x00000000
                  cmdMsgGrp
                          DCD      0x00000000
                  debug_msg
                          DCD      0x00000000
                  debugMsgGrp
                          DCD      0x00000000
                  modbusRTU_msg
                          DCD      0x00000000
                  modbusRTUMsgGrp
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "user\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_main____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 462
|__asm___6_main_c_main____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____RRX|
#line 649
|__asm___6_main_c_main____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
