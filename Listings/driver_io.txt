; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\driver_io.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\driver_io.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\user -I.\driver -I.\HARDWARE\TIMER -I.\AD_Sample -I.\SYSTEM\delay -I.\Cmd -I.\SYSTEM\sys -I.\UCOSII\CONFIG -I.\UCOSII\CORE -I.\UCOSII\PORT -I.\Protocol -I.\RTE\Device\STM32F103ZE -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD --omf_browse=.\objects\driver_io.crf driver\driver_io.c]
                          THUMB

                          AREA ||i.drive_io_init||, CODE, READONLY, ALIGN=2

                  drive_io_init PROC
;;;3      
;;;4      void drive_io_init (void)
000000  b508              PUSH     {r3,lr}
;;;5      {
;;;6      	/*定义一个GPIO_InitTypeDef类型的结构体*/
;;;7      	GPIO_InitTypeDef GPIO_InitStructure;
;;;8      
;;;9      	/*开启GPIOB和GPIOF的外设时钟*/
;;;10     	RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOF, ENABLE); 
000002  2101              MOVS     r1,#1
000004  2080              MOVS     r0,#0x80
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;11     
;;;12     	/*设置引脚模式为通用推挽输出*/
;;;13     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   
00000a  2010              MOVS     r0,#0x10
00000c  f88d0003          STRB     r0,[sp,#3]
;;;14     
;;;15     	/*设置引脚速率为50MHz */   
;;;16     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;17     
;;;18     	/*选择要控制的GPIOB引脚*/															   
;;;19     	GPIO_InitStructure.GPIO_Pin = OUTPUT_PIN_MAP;
000016  f64f70ff          MOV      r0,#0xffff
00001a  f8ad0000          STRH     r0,[sp,#0]
;;;20     	
;;;21     	/*调用库函数，初始化GPIOB*/
;;;22     	GPIO_Init(GPIOF, &GPIO_InitStructure);	
00001e  4669              MOV      r1,sp
000020  480b              LDR      r0,|L1.80|
000022  f7fffffe          BL       GPIO_Init
;;;23     	
;;;24     	GPIO_SetBits(GPIOF, OUTPUT_PIN_MAP);	
000026  f64f71ff          MOV      r1,#0xffff
00002a  4809              LDR      r0,|L1.80|
00002c  f7fffffe          BL       GPIO_SetBits
;;;25     	
;;;26     	PFout(0) = 0;
000030  2000              MOVS     r0,#0
000032  4908              LDR      r1,|L1.84|
000034  6008              STR      r0,[r1,#0]
;;;27     	PFout(0) = 1;
000036  2001              MOVS     r0,#1
000038  4907              LDR      r1,|L1.88|
00003a  f8c10180          STR      r0,[r1,#0x180]
;;;28     	PFout(1) = 0;
00003e  2000              MOVS     r0,#0
000040  4904              LDR      r1,|L1.84|
000042  1d09              ADDS     r1,r1,#4
000044  6008              STR      r0,[r1,#0]
;;;29     	PFout(1) = 1;
000046  2001              MOVS     r0,#1
000048  4903              LDR      r1,|L1.88|
00004a  f8c10184          STR      r0,[r1,#0x184]
;;;30     			
;;;31     	/* 关闭所有led灯	*/	 
;;;32     //	GPIO_ResetBits(GPIOF, GPIO_Pin_0);	
;;;33     //	GPIO_SetBits(GPIOF, GPIO_Pin_0);	 	 
;;;34     //	GPIO_ResetBits(GPIOF, GPIO_Pin_1);	 
;;;35     //	GPIO_SetBits(GPIOF, GPIO_Pin_1); 	 
;;;36     //	GPIO_ResetBits(GPIOF, GPIO_Pin_2);	
;;;37     //	GPIO_SetBits(GPIOF, GPIO_Pin_2);	 	 
;;;38     //	GPIO_ResetBits(GPIOF, GPIO_Pin_3);	
;;;39     //	GPIO_SetBits(GPIOF, GPIO_Pin_3);	 	 
;;;40     //	GPIO_ResetBits(GPIOF, GPIO_Pin_4);	
;;;41     //	GPIO_SetBits(GPIOF, GPIO_Pin_4);		 
;;;42     //	GPIO_ResetBits(GPIOF, GPIO_Pin_5);		
;;;43     //	GPIO_SetBits(GPIOF, GPIO_Pin_5); 	 
;;;44     //	GPIO_ResetBits(GPIOF, GPIO_Pin_6);	 
;;;45     //	GPIO_SetBits(GPIOF, GPIO_Pin_6);	 	 
;;;46     //	GPIO_ResetBits(GPIOF, GPIO_Pin_7);		
;;;47     //	GPIO_SetBits(GPIOF, GPIO_Pin_7);	 	 
;;;48     //	GPIO_ResetBits(GPIOF, GPIO_Pin_8);
;;;49     //	GPIO_SetBits(GPIOF, GPIO_Pin_8);	 	 
;;;50     //	GPIO_ResetBits(GPIOF, GPIO_Pin_9);		
;;;51     //	GPIO_SetBits(GPIOF, GPIO_Pin_9);		 
;;;52     //	GPIO_ResetBits(GPIOF, GPIO_Pin_10);	
;;;53     //	GPIO_SetBits(GPIOF, GPIO_Pin_10); 	 
;;;54     //	GPIO_ResetBits(GPIOF, GPIO_Pin_11);		 
;;;55     //	GPIO_SetBits(GPIOF, GPIO_Pin_11);	 	 
;;;56     //	GPIO_ResetBits(GPIOF, GPIO_Pin_12);	
;;;57     //	GPIO_SetBits(GPIOF, GPIO_Pin_12);	 	 
;;;58     //	GPIO_ResetBits(GPIOF, GPIO_Pin_13);	
;;;59     //	GPIO_SetBits(GPIOF, GPIO_Pin_13);	 	 
;;;60     //	GPIO_ResetBits(GPIOF, GPIO_Pin_14);	
;;;61     //	GPIO_SetBits(GPIOF, GPIO_Pin_14);		 
;;;62     //	GPIO_ResetBits(GPIOF, GPIO_Pin_15);	
;;;63     //	GPIO_SetBits(GPIOF, GPIO_Pin_15);
;;;64     //	GPIO_SetBits(GPIOF, OUTPUT_PIN_MAP);	
;;;65     //	GPIO_ResetBits(GPIOF, OUTPUT_PIN_MAP); 
;;;66     }
00004e  bd08              POP      {r3,pc}
;;;67     
                          ENDP

                  |L1.80|
                          DCD      0x40011c00
                  |L1.84|
                          DCD      0x42238180
                  |L1.88|
                          DCD      0x42238000

;*** Start embedded assembler ***

#line 1 "driver\\driver_io.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_driver_io_c_f98c4609____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_driver_io_c_f98c4609____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_driver_io_c_f98c4609____REVSH|
#line 462
|__asm___11_driver_io_c_f98c4609____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_driver_io_c_f98c4609____RRX|
#line 649
|__asm___11_driver_io_c_f98c4609____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
