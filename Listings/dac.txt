; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\dac.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\dac.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\user -I.\driver -I.\HARDWARE\TIMER -I.\AD_Sample -I.\SYSTEM\delay -I.\Cmd -I.\SYSTEM\sys -I.\UCOSII\CONFIG -I.\UCOSII\CORE -I.\UCOSII\PORT -I.\Protocol -I.\RTE\Device\STM32F103ZE -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F10X_HD --omf_browse=.\objects\dac.crf driver\dac.c]
                          THUMB

                          AREA ||i.dac1_set_vol||, CODE, READONLY, ALIGN=1

                  dac1_set_vol PROC
;;;67     //vol:0~3300,代表0~3.3V
;;;68     void dac1_set_vol(u16 vol)
000000  b510              PUSH     {r4,lr}
;;;69     {
000002  4604              MOV      r4,r0
;;;70     //	float temp=vol;
;;;71     //	temp/=1000;
;;;72     //	temp=temp*4096/3.3;
;;;73     	DAC_SetChannel1Data(DAC_Align_12b_R, vol);//12位右对齐数据格式设置DAC值
000004  4621              MOV      r1,r4
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       DAC_SetChannel1Data
;;;74     }
00000c  bd10              POP      {r4,pc}
;;;75     
                          ENDP


                          AREA ||i.dac_init||, CODE, READONLY, ALIGN=2

                  dac_init PROC
;;;8      
;;;9      void dac_init (void)
000000  b500              PUSH     {lr}
;;;10     {
000002  b091              SUB      sp,sp,#0x44
;;;11       
;;;12     	GPIO_InitTypeDef GPIO_InitStructure;
;;;13     	DAC_InitTypeDef DAC_InitType;
;;;14     	DMA_InitTypeDef DMA_InitStructure;
;;;15     
;;;16     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE );	  //使能PORTA通道时钟
000004  2101              MOVS     r1,#1
000006  2004              MOVS     r0,#4
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;17        	RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE );	  //使能DAC通道时钟 
00000c  2101              MOVS     r1,#1
00000e  0748              LSLS     r0,r1,#29
000010  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;18     	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA2, ENABLE);
000014  2101              MOVS     r1,#1
000016  2002              MOVS     r0,#2
000018  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;19     
;;;20     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;				 // 端口配置
00001c  2010              MOVS     r0,#0x10
00001e  f8ad0040          STRH     r0,[sp,#0x40]
;;;21      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN; 		 //模拟输入
000022  2000              MOVS     r0,#0
000024  f88d0043          STRB     r0,[sp,#0x43]
;;;22      	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000028  2003              MOVS     r0,#3
00002a  f88d0042          STRB     r0,[sp,#0x42]
;;;23      	GPIO_Init(GPIOA, &GPIO_InitStructure);
00002e  a910              ADD      r1,sp,#0x40
000030  4820              LDR      r0,|L2.180|
000032  f7fffffe          BL       GPIO_Init
;;;24     	GPIO_SetBits(GPIOA,GPIO_Pin_4)	;//PA.4 输出高
000036  2110              MOVS     r1,#0x10
000038  481e              LDR      r0,|L2.180|
00003a  f7fffffe          BL       GPIO_SetBits
;;;25     					
;;;26     	//DAC_InitType.DAC_Trigger=DAC_Trigger_None;	//不使用触发功能 TEN1=0
;;;27     	DAC_InitType.DAC_Trigger=DAC_Trigger_T6_TRGO;	//不使用触发功能 TEN1=0
00003e  2004              MOVS     r0,#4
000040  900c              STR      r0,[sp,#0x30]
;;;28     	DAC_InitType.DAC_WaveGeneration=DAC_WaveGeneration_None;//不使用波形发生
000042  2000              MOVS     r0,#0
000044  900d              STR      r0,[sp,#0x34]
;;;29     	DAC_InitType.DAC_LFSRUnmask_TriangleAmplitude=DAC_LFSRUnmask_Bit0;//屏蔽、幅值设置
000046  900e              STR      r0,[sp,#0x38]
;;;30     	DAC_InitType.DAC_OutputBuffer=DAC_OutputBuffer_Disable ;	//DAC1输出缓存关闭 BOFF1=1
000048  2002              MOVS     r0,#2
00004a  900f              STR      r0,[sp,#0x3c]
;;;31         DAC_Init(DAC_Channel_1,&DAC_InitType);	 //初始化DAC通道1
00004c  a90c              ADD      r1,sp,#0x30
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       DAC_Init
;;;32         DAC_SetChannel1Data(DAC_Align_12b_R, 0);  //12位右对齐数据格式设置DAC值
000054  2100              MOVS     r1,#0
000056  4608              MOV      r0,r1
000058  f7fffffe          BL       DAC_SetChannel1Data
;;;33     
;;;34     	DMA_DeInit(DMA2_Channel3);
00005c  4816              LDR      r0,|L2.184|
00005e  f7fffffe          BL       DMA_DeInit
;;;35     
;;;36     	DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)&DAC->DHR12R1;
000062  4816              LDR      r0,|L2.188|
000064  9001              STR      r0,[sp,#4]
;;;37     	DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Sine12bit;
000066  4816              LDR      r0,|L2.192|
000068  9002              STR      r0,[sp,#8]
;;;38     	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
00006a  2010              MOVS     r0,#0x10
00006c  9003              STR      r0,[sp,#0xc]
;;;39     	DMA_InitStructure.DMA_BufferSize = 32;
00006e  2020              MOVS     r0,#0x20
000070  9004              STR      r0,[sp,#0x10]
;;;40     	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
000072  2000              MOVS     r0,#0
000074  9005              STR      r0,[sp,#0x14]
;;;41     	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
000076  2080              MOVS     r0,#0x80
000078  9006              STR      r0,[sp,#0x18]
;;;42     	DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
00007a  0040              LSLS     r0,r0,#1
00007c  9007              STR      r0,[sp,#0x1c]
;;;43     	DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
00007e  0080              LSLS     r0,r0,#2
000080  9008              STR      r0,[sp,#0x20]
;;;44     	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
000082  2020              MOVS     r0,#0x20
000084  9009              STR      r0,[sp,#0x24]
;;;45     	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
000086  0200              LSLS     r0,r0,#8
000088  900a              STR      r0,[sp,#0x28]
;;;46     	DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
00008a  2000              MOVS     r0,#0
00008c  900b              STR      r0,[sp,#0x2c]
;;;47     
;;;48     	DMA_Init(DMA2_Channel3, &DMA_InitStructure);
00008e  a901              ADD      r1,sp,#4
000090  4809              LDR      r0,|L2.184|
000092  f7fffffe          BL       DMA_Init
;;;49     	/* Enable DMA1 Channel4 */
;;;50     	DMA_Cmd(DMA2_Channel3, ENABLE);
000096  2101              MOVS     r1,#1
000098  4807              LDR      r0,|L2.184|
00009a  f7fffffe          BL       DMA_Cmd
;;;51     
;;;52       /* Enable DAC Channel1: Once the DAC channel1 is enabled, PA.04 is 
;;;53          automatically connected to the DAC converter. */
;;;54     	/* Enable DAC Channel2: Once the DAC channel2 is enabled, PA.05 is 
;;;55     		automatically connected to the DAC converter. */
;;;56     //	DAC_Cmd(DAC_Channel_2, ENABLE);
;;;57     
;;;58     	/* Enable DMA for DAC Channel2 */
;;;59     	
;;;60     	DAC_DMACmd(DAC_Channel_1, ENABLE);
00009e  2101              MOVS     r1,#1
0000a0  2000              MOVS     r0,#0
0000a2  f7fffffe          BL       DAC_DMACmd
;;;61     	DAC_Cmd(DAC_Channel_1, ENABLE);  //使能DAC1
0000a6  2101              MOVS     r1,#1
0000a8  2000              MOVS     r0,#0
0000aa  f7fffffe          BL       DAC_Cmd
;;;62     
;;;63     }
0000ae  b011              ADD      sp,sp,#0x44
0000b0  bd00              POP      {pc}
;;;64     
                          ENDP

0000b2  0000              DCW      0x0000
                  |L2.180|
                          DCD      0x40010800
                  |L2.184|
                          DCD      0x40020430
                  |L2.188|
                          DCD      0x40007408
                  |L2.192|
                          DCD      Sine12bit

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  Sine12bit
000000  07ff098f          DCW      0x07ff,0x098f
000004  0b0f0c71          DCW      0x0b0f,0x0c71
000008  0daa0ea6          DCW      0x0daa,0x0ea6
00000c  0f630fd8          DCW      0x0f63,0x0fd8
000010  0fff0fd8          DCW      0x0fff,0x0fd8
000014  0f630ea6          DCW      0x0f63,0x0ea6
000018  0da70c71          DCW      0x0da7,0x0c71
00001c  0b0f098f          DCW      0x0b0f,0x098f
000020  07ff066f          DCW      0x07ff,0x066f
000024  04ef038d          DCW      0x04ef,0x038d
000028  02570158          DCW      0x0257,0x0158
00002c  009b0026          DCW      0x009b,0x0026
000030  00000026          DCW      0x0000,0x0026
000034  009b0158          DCW      0x009b,0x0158
000038  0257038d          DCW      0x0257,0x038d
00003c  04ef066f          DCW      0x04ef,0x066f

;*** Start embedded assembler ***

#line 1 "driver\\dac.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_dac_c_8fa5a045____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_dac_c_8fa5a045____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_dac_c_8fa5a045____REVSH|
#line 462
|__asm___5_dac_c_8fa5a045____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_dac_c_8fa5a045____RRX|
#line 649
|__asm___5_dac_c_8fa5a045____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
